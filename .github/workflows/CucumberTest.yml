# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on: [push]
  
jobs:
  build:
    runs-on: ubuntu-latest
    env:
        CUCUMBER_JOB_STATUS: 'FAIL'
        CUCUMBER_TAG: 'testTagValue'
        CUCUMBER_JOB_STATUS_SIGN: ':white_check_mark:'
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: displaytagname
      run: |
        echo "tagname1=run_test_one" >> $GITHUB_ENV
        echo "tagname2=run_test_two" >> $GITHUB_ENV
        echo "tagname=run_test_three" >> $GITHUB_ENV
    - name: displaytagvalue
      run: |
        echo ${{ (env.tagname1 == env.tagname2 && env.tagname1) || (env.tagname2 == 'test2' && 'test2') || env.tagname }}
        echo ${{ env.tagname }}
        echo "CUCUMBER_TAG=${{ env.tagname }}" >> $GITHUB_ENV
      env:
        CUCUMBER_TAG1: ${{ env.tagname }}
    - name: cucumberTagvalue
      run: |
        echo ${{ env.CUCUMBER_TAG }}
        echo ${{ env.CUCUMBER_TAG1 }}        
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: CucumberTest
      continue-on-error: true
     # run: gradle build

    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
   # - name: Publish to GitHub Packages
      run:  ./gradlew cucumberCli
      env:
        USERNAME: ${{ github.actor }}
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: deblockt/cucumber-report-annotations-action@v1.7
      continue-on-error: true
      name: CucumberReport
      with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: "**/cucumber-report.json"
    - name: ReRunTest
      continue-on-error: true
      run:  ./gradlew cucumberReRun
      env:
       USERNAME: ${{ github.actor }}
       TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: cucumber-reports
        path: "target/"
    - name: Cucumber Job Status
      run: |
        echo "CUCUMBER_JOB_STATUS=pass" >> $GITHUB_ENV
        echo "CUCUMBER_JOB_STATUS_SIGN=':red_circle:'" >> $GITHUB_ENV
        echo ${{ env.TotalPass }}
    - run: |
        ls ./build/cucumber
        echo 'CUCUMBER_JSON<<EOF' >> $GITHUB_ENV
        cat ./build/cucumber/cucumber-report.json >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
    - run: |
        echo '${{ fromJson(env.CUCUMBER_JSON) }}'
    - name: slack - GitHub Actions Slack integration
      id: slack
      if: ${{ env.CUCUMBER_JOB_STATUS }} == 'PASS'
      uses: slackapi/slack-github-action@v1.18.0
      with:
        payload: |
          { 
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "New request ${{ github.run_number }}",
                  "emoji": true
                }
              },
              {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*ENV:*\ntest"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Execution Status:*\n${{ env.CUCUMBER_JOB_STATUS }} ${{ env.CUCUMBER_JOB_STATUS_SIGN }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Run Details:*\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
            ]
          }
      env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
            SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ github.ref == 'refs/heads/main' }}
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: myghpages
  

